# * *************************************************************
# *  
# *   Active Particles on Curved Spaces (APCS)
# *   
# *   Author: Rastko Sknepnek
# *  
# *   Division of Physics
# *   School of Engineering, Physics and Mathematics
# *   University of Dundee
# *   
# *   (c) 2013
# *   
# *   This program cannot be used, copied, or modified without
# *   explicit permission of the author.
# * 
# * ************************************************************** 

#
#  Simulation of N=250 active particles interacting with the 
#  soft-core potential confined on the surface of a sphere
#  


# All runtime messages will be sent to file messages.msg
messages messages.msg

# Every simulation requires a box
# "fixed" means that no periodic boundary is applied (irrelevant here due to spherical geometry)
# box is cubic with size 30x30x30 (Lennard-Jones units) and spans from -15 to 15 in 
# each direction 
box fixed { lx = 30.0;  ly = 30.0;  lz = 30.0 }

# We read in particle positions from file sphere.dat (generated by tools in utils directory)
input sphere.dat

# We set the neighbour list with cutoff distance 1.5 and padding distance of 0.5
nlist { rcut = 1.5; pad = 0.5 }

# In following we define different data outputs

# Output particle velocities. Base name of the file is sphere_test
# File extension will we '.vel'. Output will be generated every 10000 time steps
# staring from the step 0. Each snapshots will be stored in a separate file (keyword 'multi')
# with name sphere_test_[time_step].vel (e.g., sphere_test_0000010000.vel)
# and each file with contain a header with the description of its content
dump sphere_test { type=velocity; start=0; freq=10000; multi; header }

# Same as above, but the format will be XYZ and file extension '.xyz'
dump sphere_test { type=xyz; start=0; freq=10000; multi; header }

# In order to generate a trajectory, we output coordinates every 1000 time steps
# In this case all snapshots will be stored in one file 'sphere_test.dcd'
dump sphere_test { type=dcd; start=0; freq=1000  }

# Finally, every 10000 steps we generate a separate file that contains only 
# particle coordinates (and the header)
dump sphere_test { type=full; start=0; freq=10000; multi; coordinate; header  }


# We constrain all particles to move only on the surface of a sphere if radius R = 3
constraint sphere { R = 3.0 }


# All particles are interacting with the soft-core potential of strength 
# k = 10.0 (energy units)
pair_potential soft { k = 10.0 }

# Integrate equations of motion using Brownian dynamics.
# seed is the initial seed for the random number generator
# dt is the integrator time step (in Lennard-Jones units) 
# nu sets the width of the distribution for random changes of velocity
# mu is particle mobility
# v0 is the intensity of the self-propelling velocity
integrator brownian { dt=0.001; seed = 1;  nu = 0.2; mu = 1.0;  v0 = 1.0 }

# Finally, we run simulation for 100,000 time steps
run 100000


