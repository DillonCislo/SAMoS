# * *************************************************************
# *  
# *   Soft Active Mater on Surfaces (SAMoS)
# *   
# *   Author: Rastko Sknepnek
# *  
# *   Division of Physics
# *   School of Engineering, Physics and Mathematics
# *   University of Dundee
# *   
# *   (c) 2013, 2014
# * 
# *   School of Science and Engineering
# *   School of Life Sciences 
# *   University of Dundee
# * 
# *   (c) 2015
# * 
# *   Author: Silke Henkes
# * 
# *   Department of Physics 
# *   Institute for Complex Systems and Mathematical Biology
# *   University of Aberdeen  
# * 
# *   (c) 2014, 2015
# *  
# *   This program cannot be used, copied, or modified without
# *   explicit written permission of the authors.
# * 
# * ***************************************************************

# Example for cell types and cell sorting

# All runtime messages will be sent to file messages.msg
messages messages.msg
config configuration {type = json}

# box is cubic with size 100x100x10 
box fixed { lx = 100.0;  ly = 100.0;  lz = 10.0 }

# We read in particle positions 
input epi.input

# Read boundary connectivity
read_cell_boundary epi.boundary


# max_perimeter and max_edge_len refer to the triangulation faces and edges. 
# The triangulation flag indicates that our particles are vertices of a mesh and we are running a cell simulation.
nlist { rcut = 2.4; pad = 0.5; build_faces; max_perimeter = 30.0; max_edge_len = 20.0; triangulation; }

# We constrain all particles to move only on the xy plane.
constraint plane { unlimited  }

# Cell potential
# K is the area term stiffness, gamma is the perimeter stiffness 
# lambda is the junction tension
# 
pair_potential vp { K = 1.0; gamma = 1.0; lambda = -6.3; }

# Set lambda between types so that type 2 and type 3 cell contacts are costly
# This line just overwrites the values of lambda for contacts between cells of type 2 and those of type 3
# Cell types are set in the input file and must be a range starting from 1. I chose to set the boundary 
# particles to a distinct type, 1, and then the two types of cells are types 2 and 3.
# You cannot have a cell type of 2 unless you also have a cell type of 1. There is no type 0.
pair_param vp { type_1=2; type_2=3; lambda = -5.8 }

# line tension only applies to the particles that are on the boundary
pair_potential line_tension { lambda = 2.0; }
pair_potential boundary_bending { kappa = 0.1; }

# Soft repulsion at reasonable distance
pair_potential soft { k = 10.0; a = 1.0 }

# frequent logging of simple metrics
log cell.log { freq = 100; size; area; avg_perim; vp_energy }

# .vtp file for the cell centres, boundary particles and delaunay triangulation.
dump cell { type=vtp; start=0; freq=100; multi }
# .vtp file for the polygonal cell shapes
dump cell_dual { type=vtp; start=0; freq=100; multi; dual }
# Data dump. Has extension '.dat' .
dump cell { type=full; start=0; freq=100; multi; id; tp; boundary; coordinate; velocity; force; director; area; cell_area; cell_perim; keys }
# Faces files can be used to reconstruct the triangulation and the polygonal mesh in python for analysis.
dump faces { type=face; start=0; freq=100; multi; }

# Running the simulation
# Such a low timestep won't be necessary
timestep 0.005

# Instead of activity we just have an uncorrelated random noise
# Sorting experiments with activity instead are similarly interesting
integrator brownian_pos {group= all; seed = 1;  mu = 1.0; temperature_control=constant; min_val=0.02 }

run 100000



